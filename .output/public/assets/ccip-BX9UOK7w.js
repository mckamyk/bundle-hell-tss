import{aB as b,aC as O,aD as F,aE as P,aF as q,aG as L,aH as E,aI as S,aJ as w,aK as $,aL as R,aM as D,aN as G,aO as m,aP as I,aQ as y,aR as x,aS as M,aT as T,aU as C,aV as H,aW as U,aX as A,aY as v}from"./main-CdTcIt3Q.js";function B(a){const{abi:r,data:e}=a,s=b(e,0,4),t=r.find(o=>o.type==="function"&&s===O(F(o)));if(!t)throw new P(s,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:t.name,args:"inputs"in t&&t.inputs&&t.inputs.length>0?q(t.inputs,b(e,4)):void 0}}const p="/docs/contract/encodeErrorResult";function k(a){const{abi:r,errorName:e,args:s}=a;let t=r[0];if(e){const u=L({abi:r,args:s,name:e});if(!u)throw new E(e,{docsPath:p});t=u}if(t.type!=="error")throw new E(void 0,{docsPath:p});const o=F(t),n=O(o);let c="0x";if(s&&s.length>0){if(!t.inputs)throw new S(t.name,{docsPath:p});c=w(t.inputs,s)}return $([n,c])}const h="/docs/contract/encodeFunctionResult";function j(a){const{abi:r,functionName:e,result:s}=a;let t=r[0];if(e){const n=L({abi:r,name:e});if(!n)throw new R(e,{docsPath:h});t=n}if(t.type!=="function")throw new R(void 0,{docsPath:h});if(!t.outputs)throw new D(t.name,{docsPath:h});const o=(()=>{if(t.outputs.length===0)return[];if(t.outputs.length===1)return[s];if(Array.isArray(s))return s;throw new G(s)})();return w(t.outputs,o)}const J="x-batch-gateway:true";async function W(a){const{data:r,ccipRequest:e}=a,{args:[s]}=B({abi:m,data:r}),t=[],o=[];return await Promise.all(s.map(async(n,c)=>{try{o[c]=await e(n),t[c]=!1}catch(u){t[c]=!0,o[c]=_(u)}})),j({abi:m,functionName:"query",result:[t,o]})}function _(a){return a.name==="HttpRequestError"&&a.status?k({abi:m,errorName:"HttpError",args:[a.status,a.shortMessage]}):k({abi:[I],errorName:"Error",args:["shortMessage"in a?a.shortMessage:a.message]})}class K extends y{constructor({callbackSelector:r,cause:e,data:s,extraData:t,sender:o,urls:n}){var c;super(e.shortMessage||"An error occurred while fetching for an offchain result.",{cause:e,metaMessages:[...e.metaMessages||[],(c=e.metaMessages)!=null&&c.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map(u=>`    ${x(u)}`)],`  Sender: ${o}`,`  Data: ${s}`,`  Callback selector: ${r}`,`  Extra data: ${t}`].flat(),name:"OffchainLookupError"})}}class Q extends y{constructor({result:r,url:e}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${x(e)}`,`Response: ${M(r)}`],name:"OffchainLookupResponseMalformedError"})}}class V extends y{constructor({sender:r,to:e}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${e}`,`OffchainLookup sender address: ${r}`],name:"OffchainLookupSenderMismatchError"})}}const Z="0x556f1830",X={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function tt(a,{blockNumber:r,blockTag:e,data:s,to:t}){const{args:o}=T({data:s,abi:[X]}),[n,c,u,f,d]=o,{ccipRead:i}=a,g=i&&typeof(i==null?void 0:i.request)=="function"?i.request:Y;try{if(!C(t,n))throw new V({sender:n,to:t});const l=c.includes(J)?await W({data:u,ccipRequest:g}):await g({data:u,sender:n,urls:c}),{data:N}=await H(a,{blockNumber:r,blockTag:e,data:U([f,w([{type:"bytes"},{type:"bytes"}],[l,d])]),to:t});return N}catch(l){throw new K({callbackSelector:f,cause:l,data:s,extraData:d,sender:n,urls:c})}}async function Y({data:a,sender:r,urls:e}){var t;let s=new Error("An unknown error occurred.");for(let o=0;o<e.length;o++){const n=e[o],c=n.includes("{data}")?"GET":"POST",u=c==="POST"?{data:a,sender:r}:void 0,f=c==="POST"?{"Content-Type":"application/json"}:{};try{const d=await fetch(n.replace("{sender}",r.toLowerCase()).replace("{data}",a),{body:JSON.stringify(u),headers:f,method:c});let i;if((t=d.headers.get("Content-Type"))!=null&&t.startsWith("application/json")?i=(await d.json()).data:i=await d.text(),!d.ok){s=new A({body:u,details:i!=null&&i.error?M(i.error):d.statusText,headers:d.headers,status:d.status,url:n});continue}if(!v(i)){s=new Q({result:i,url:n});continue}return i}catch(d){s=new A({body:u,details:d.message,url:n})}}throw s}export{Y as ccipRequest,tt as offchainLookup,X as offchainLookupAbiItem,Z as offchainLookupSignature};
